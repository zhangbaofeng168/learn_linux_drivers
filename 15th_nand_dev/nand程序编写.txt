/*1.分配一个nand_chip结构体*/
	my_nand = kzalloc(sizeof(struct nand_chip), GFP_KERNEL);
/*2.使能nand时钟*/
	clk = clk_get(NULL,"nand");
	clk_enable(clk);
/*3.nand_chip结构体的设置 能发地址，发数据，读数据，读状态等函数*/*/

/*3.硬件相关的设置:根据nandflash手册设置时间参数
	TACLS >=0
	TWRPH0 = 12ns TWRPH1 = 5ns*/
	
/*4.使用：nand_scan 扫描识别 nandflash*/
	/*分配mtd_info结构体*/
	my_mtd = kzalloc(sizeof(struct mtd_info), GFP_KERNEL);
	my_mtd->priv  = my_nand;
	my_mtd->owner = THIS_MODULE;
	
	nand_scan(my_mtd, 1);
/*5.add_mtd_partitions*/
	add_mtd_partitions(my_mtd,my_parts,4);
	/*设置分区表*/
	static struct mtd_partition my_parts[]={
	[0] = {
		.name		= "bootloader",
		.offset		= (0),          /* for bootloader */
		.size		= (1024*SZ_1K),
		.mask_flags	= MTD_CAP_NANDFLASH,
	},
	[1] = {
		.name		= "Logo",
		.offset		= (2*SZ_1M),
		.size		= (3*SZ_1M),
	},
	[2] = {
		.name		= "kernel",
		.offset		= MTDPART_OFS_APPEND,
		.size		= (5*SZ_1M),
	},
	[3] = {
		.name		= "rootfs",
		.offset		= MTDPART_OFS_APPEND,
		.size		= MTDPART_SIZ_FULL,
	}
};